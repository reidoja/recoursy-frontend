[{"D:\\ASLAB\\RIG2\\ReCourSy\\recoursy-frontend\\src\\index.tsx":"1","D:\\ASLAB\\RIG2\\ReCourSy\\recoursy-frontend\\src\\reportWebVitals.ts":"2","D:\\ASLAB\\RIG2\\ReCourSy\\recoursy-frontend\\src\\App.tsx":"3","D:\\ASLAB\\RIG2\\ReCourSy\\recoursy-frontend\\src\\components\\Navbar\\Navbar.tsx":"4","D:\\ASLAB\\RIG2\\ReCourSy\\recoursy-frontend\\src\\pages\\Test.tsx":"5","D:\\ASLAB\\RIG2\\ReCourSy\\recoursy-frontend\\src\\pages\\PageNotFound\\PageNotFound.tsx":"6","D:\\ASLAB\\RIG2\\ReCourSy\\recoursy-frontend\\src\\components\\SelectInput\\SelectInput.tsx":"7","D:\\ASLAB\\RIG2\\ReCourSy\\recoursy-frontend\\src\\pages\\ViewDeliveryStatusPage\\ViewDeliveryStatusPage.tsx":"8","D:\\ASLAB\\RIG2\\ReCourSy\\recoursy-frontend\\src\\pages\\SetWorkingHourPage\\SetWorkingHourPage.tsx":"9","D:\\ASLAB\\RIG2\\ReCourSy\\recoursy-frontend\\src\\components\\CustomModal\\CustomModal.tsx":"10","D:\\ASLAB\\RIG2\\ReCourSy\\recoursy-frontend\\src\\pages\\ViewWorkingHourPage\\ViewWorkingHourPage.tsx":"11","D:\\ASLAB\\RIG2\\ReCourSy\\recoursy-frontend\\src\\pages\\ViewRequestPage\\ViewRequestPage.tsx":"12","D:\\ASLAB\\RIG2\\ReCourSy\\recoursy-frontend\\src\\pages\\ViewDeliveryHistoryPage\\ViewDeliveryHistoryPage.tsx":"13","D:\\ASLAB\\RIG2\\ReCourSy\\recoursy-frontend\\src\\pages\\RequestDeliveryPage\\RequestDeliveryPage.tsx":"14","D:\\ASLAB\\RIG2\\ReCourSy\\recoursy-frontend\\src\\pages\\HomePage\\HomePage.tsx":"15","D:\\ASLAB\\RIG2\\ReCourSy\\recoursy-frontend\\src\\pages\\LoginPage\\LoginPage.tsx":"16","D:\\ASLAB\\RIG2\\ReCourSy\\recoursy-frontend\\src\\routes\\MainRoute.tsx":"17","D:\\ASLAB\\RIG2\\ReCourSy\\recoursy-frontend\\src\\utlis\\cookies.ts":"18"},{"size":593,"mtime":1610685754641,"results":"19","hashOfConfig":"20"},{"size":425,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":541,"mtime":1611120781923,"results":"22","hashOfConfig":"20"},{"size":4652,"mtime":1611119300778,"results":"23","hashOfConfig":"20"},{"size":159,"mtime":1610685195696,"results":"24","hashOfConfig":"25"},{"size":484,"mtime":1610685947655,"results":"26","hashOfConfig":"20"},{"size":2451,"mtime":1610775481915,"results":"27","hashOfConfig":"20"},{"size":5085,"mtime":1610814265651,"results":"28","hashOfConfig":"20"},{"size":3074,"mtime":1610778399892,"results":"29","hashOfConfig":"20"},{"size":925,"mtime":1610777879271,"results":"30","hashOfConfig":"20"},{"size":1504,"mtime":1610778831312,"results":"31","hashOfConfig":"20"},{"size":3603,"mtime":1610781143411,"results":"32","hashOfConfig":"20"},{"size":3937,"mtime":1610814181262,"results":"33","hashOfConfig":"20"},{"size":5142,"mtime":1610820308706,"results":"34","hashOfConfig":"20"},{"size":4266,"mtime":1611119020468,"results":"35","hashOfConfig":"20"},{"size":1608,"mtime":1611123771560,"results":"36","hashOfConfig":"20"},{"size":1908,"mtime":1611119793827,"results":"37","hashOfConfig":"20"},{"size":773,"mtime":1611120398221,"results":"38","hashOfConfig":"20"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"uhryhw",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"41"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"41"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"10uouey",{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"41"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"41"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"41"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"41"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"41"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"41"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"41"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"41"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"41"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"41"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"D:\\ASLAB\\RIG2\\ReCourSy\\recoursy-frontend\\src\\index.tsx",[],["89","90"],"D:\\ASLAB\\RIG2\\ReCourSy\\recoursy-frontend\\src\\reportWebVitals.ts",[],"D:\\ASLAB\\RIG2\\ReCourSy\\recoursy-frontend\\src\\App.tsx",["91","92"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Route, Switch } from 'react-router';\nimport LoginPage from './pages/LoginPage/LoginPage';\nimport MainRoute from './routes/MainRoute';\nimport { getCookie } from './utlis/cookies';\n\nfunction App() {\n  const token = getCookie('tkn') || '';\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/login\" component={LoginPage} />\n        <Route path=\"/\" component={MainRoute} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\ASLAB\\RIG2\\ReCourSy\\recoursy-frontend\\src\\components\\Navbar\\Navbar.tsx",["93","94","95"],"import {\r\n  AppBar,\r\n  Box,\r\n  Button,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  makeStyles,\r\n  Menu,\r\n  Theme,\r\n  Toolbar,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport React, { ReactElement, useState } from 'react';\r\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport { useHistory } from 'react-router';\r\ninterface Props {}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    color: theme.palette.common.white,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    cursor: 'pointer',\r\n  },\r\n  overlay: {\r\n    top: '64px',\r\n    minHeight: 'calc(100vh - 64px)',\r\n    width: '100vw',\r\n    zIndex: 999,\r\n    position: 'fixed',\r\n    left: 0,\r\n    opacity: 1,\r\n    backgroundColor: 'rgba(50, 50, 50, 0.3)',\r\n    transition: 'opacity 350ms ease-in',\r\n  },\r\n  content: {\r\n    color: 'black',\r\n    transform: 'translteX(0)',\r\n    transition: 'transform 250ms ease-out',\r\n    height: 'calc(100vh - 64px)',\r\n    width: '250px',\r\n    backgroundColor: 'white',\r\n    overflow: 'auto',\r\n  },\r\n  hideOverlay: {\r\n    top: '64px',\r\n    minHeight: 'calc(100vh - 64px)',\r\n    width: '100vw',\r\n    zIndex: 999,\r\n    position: 'fixed',\r\n    left: 0,\r\n    backgroundColor: 'rgba(50, 50, 50, 0.3)',\r\n    transition: 'opacity 350ms ease-in',\r\n    opacity: 0,\r\n    pointerEvents: 'none',\r\n  },\r\n  hideSideBar: {\r\n    color: 'black',\r\n    transition: 'transform 250ms ease-out',\r\n    height: 'calc(100vh - 64px)',\r\n    width: '250px',\r\n    backgroundColor: 'white',\r\n    overflow: 'auto',\r\n    transform: 'translateX(-100%)',\r\n  },\r\n  listItem: {\r\n    cursor: 'pointer',\r\n    padding: '16px',\r\n    borderBottom: '1px solid rgba(50, 50, 50, 0.2)',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\nexport default function Navbar({}: Props): ReactElement {\r\n  const classes = useStyles();\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.root}>\r\n      <Toolbar>\r\n        <IconButton\r\n          onClick={() => setIsOpen(!isOpen)}\r\n          edge=\"start\"\r\n          className={classes.menuButton}\r\n          color=\"inherit\"\r\n          aria-label=\"open drawer\">\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography\r\n          onClick={() => history.push('/home')}\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          noWrap>\r\n          ReCourSy\r\n        </Typography>\r\n        <Button onClick={() => history.push('/login')} color=\"inherit\">\r\n          Login\r\n        </Button>\r\n      </Toolbar>\r\n      <Box className={isOpen ? classes.overlay : classes.hideOverlay}>\r\n        <List className={isOpen ? classes.content : classes.hideSideBar}>\r\n          <ListItem\r\n            className={classes.listItem}\r\n            onClick={() => {\r\n              history.push('/set-working-hour');\r\n              setIsOpen(false);\r\n            }}>\r\n            Set Working Hour <ArrowForwardIosIcon />\r\n          </ListItem>\r\n          <ListItem\r\n            onClick={() => {\r\n              history.push('/view-delivery-status');\r\n              setIsOpen(false);\r\n            }}\r\n            className={classes.listItem}>\r\n            View Delivery Status <ArrowForwardIosIcon />\r\n          </ListItem>\r\n          <ListItem\r\n            className={classes.listItem}\r\n            onClick={() => {\r\n              history.push('/view-working-hour');\r\n              setIsOpen(false);\r\n            }}>\r\n            View Working Hour <ArrowForwardIosIcon />\r\n          </ListItem>\r\n          <ListItem\r\n            className={classes.listItem}\r\n            onClick={() => {\r\n              history.push('/view-request');\r\n              setIsOpen(false);\r\n            }}>\r\n            View Request <ArrowForwardIosIcon />\r\n          </ListItem>\r\n          <ListItem\r\n            className={classes.listItem}\r\n            onClick={() => {\r\n              history.push('/view-delivery-history');\r\n              setIsOpen(false);\r\n            }}>\r\n            View Delivery History <ArrowForwardIosIcon />\r\n          </ListItem>\r\n          <ListItem\r\n            className={classes.listItem}\r\n            onClick={() => {\r\n              history.push('/request-delivery');\r\n              setIsOpen(false);\r\n            }}>\r\n            Request Delivery <ArrowForwardIosIcon />\r\n          </ListItem>\r\n        </List>\r\n      </Box>\r\n    </AppBar>\r\n  );\r\n}\r\n","D:\\ASLAB\\RIG2\\ReCourSy\\recoursy-frontend\\src\\pages\\Test.tsx",["96"],"D:\\ASLAB\\RIG2\\ReCourSy\\recoursy-frontend\\src\\pages\\PageNotFound\\PageNotFound.tsx",["97"],"import { Box, Typography } from '@material-ui/core';\r\nimport React, { ReactElement } from 'react';\r\n\r\ninterface Props {}\r\n\r\nexport default function PageNotFound({}: Props): ReactElement {\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      width=\"100%\"\r\n      height=\"100vh\"\r\n      flexDirection=\"column\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\">\r\n      <Typography variant=\"h3\" color=\"error\">\r\n        404 Page Not Found :(\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","D:\\ASLAB\\RIG2\\ReCourSy\\recoursy-frontend\\src\\components\\SelectInput\\SelectInput.tsx",[],["98","99"],"D:\\ASLAB\\RIG2\\ReCourSy\\recoursy-frontend\\src\\pages\\ViewDeliveryStatusPage\\ViewDeliveryStatusPage.tsx",["100","101","102","103","104"],"import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  List,\r\n  ListItem,\r\n  makeStyles,\r\n  TextField,\r\n  Theme,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport React, { ReactElement, useEffect, useState } from 'react';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport SelectInput from '../../components/SelectInput/SelectInput';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  list: {\r\n    width: '100%',\r\n  },\r\n  listItem: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start',\r\n    width: '100%',\r\n    borderBottom: '1px solid rgba(50, 50, 50, 0.2)',\r\n  },\r\n  card: {\r\n    marginBottom: '24px',\r\n  },\r\n}));\r\n\r\nconst data = [\r\n  {\r\n    delivery_id: '12345',\r\n    date: 'Jan 16 2020',\r\n    from: '1305',\r\n    detail: [\r\n      {\r\n        item_name: 'Surat Peringatan',\r\n        to: '1405',\r\n        receiver: 'asd@gmail.com',\r\n        status: 'Pending',\r\n        note: 'Berkas warna coklat, tali merah',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    delivery_id: '12345',\r\n    date: 'Jan 16 2020',\r\n    from: '1305',\r\n    detail: [\r\n      {\r\n        item_name: 'Surat Peringatan',\r\n        to: '1405',\r\n        receiver: 'asd@gmail.com',\r\n        status: 'Pending',\r\n        note: 'Berkas warna coklat, tali merah',\r\n      },\r\n      {\r\n        item_name: 'Surat Peringatan',\r\n        to: '1405',\r\n        receiver: 'asd@gmail.com',\r\n        status: 'Pending',\r\n        note: 'Berkas warna coklat, tali merah',\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\ninterface Props {}\r\n\r\nexport default function ViewDeliveryStatusPage({}: Props): ReactElement {\r\n  const classes = useStyles();\r\n\r\n  const [listStatus, setListStatus] = useState<string[]>([]);\r\n\r\n  return (\r\n    <Box width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n      <Box width=\"80%\" p={2}>\r\n        <Box display=\"flex\" justifyContent=\"flex-start\" my={2}>\r\n          <Typography variant=\"h4\">View Delivery Status</Typography>\r\n        </Box>\r\n        {data.map((el, index) => (\r\n          <Card className={classes.card} key={index}>\r\n            <CardContent>\r\n              <Box display=\"flex\" justifyContent=\"space-between\">\r\n                <Typography>Delivery Id : {el.delivery_id}</Typography>\r\n                <Typography>Date : {el.date}</Typography>\r\n              </Box>\r\n              <Box\r\n                py={2}\r\n                display=\"flex\"\r\n                flexDirection=\"column\"\r\n                alignItems=\"flex-start\">\r\n                <Typography>From : {el.from}</Typography>\r\n              </Box>\r\n              <Box borderBottom=\"1px solid\" />\r\n              <List className={classes.list}>\r\n                {el.detail.map((el1, index) => (\r\n                  <ListItem className={classes.listItem} key={index}>\r\n                    <Box display=\"flex\" width=\"100%\">\r\n                      <Typography>Item Name : {el1.item_name}</Typography>\r\n                    </Box>\r\n                    <Box\r\n                      width=\"100%\"\r\n                      py={2}\r\n                      display=\"flex\"\r\n                      justifyContent=\"space-between\">\r\n                      <Box\r\n                        display=\"flex\"\r\n                        flexDirection=\"column\"\r\n                        alignItems=\"flex-start\">\r\n                        <Typography>To : {el1.to}</Typography>\r\n                        <Typography>Receiver : {el1.receiver}</Typography>\r\n                      </Box>\r\n                      <Box\r\n                        display=\"flex\"\r\n                        flexDirection=\"column\"\r\n                        justifyContent=\"flex-end\"\r\n                        width=\"163.2px\"\r\n                        pt={1}>\r\n                        <SelectInput\r\n                          label=\"Status\"\r\n                          value={el1.status}\r\n                          onChange={(e) => {}}\r\n                          options={[\r\n                            { value: 'Completed' },\r\n                            { value: 'Pending' },\r\n                            { value: 'Canceled' },\r\n                          ]}\r\n                        />\r\n                      </Box>\r\n                    </Box>\r\n                    <Box py={2} width=\"100%\">\r\n                      <TextField\r\n                        label=\"Note\"\r\n                        fullWidth\r\n                        multiline\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        value={el1.note}\r\n                        disabled\r\n                        InputProps={{\r\n                          rows: 2,\r\n                        }}\r\n                      />\r\n                    </Box>\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n              <Box width=\"100%\" display=\"flex\" justifyContent=\"flex-end\">\r\n                <Button variant=\"contained\" color=\"primary\">\r\n                  Update\r\n                </Button>\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        ))}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","D:\\ASLAB\\RIG2\\ReCourSy\\recoursy-frontend\\src\\pages\\SetWorkingHourPage\\SetWorkingHourPage.tsx",["105"],"import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  makeStyles,\r\n  TextField,\r\n  Theme,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport React, { ReactElement, useState } from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CustomModal from '../../components/CustomModal/CustomModal';\r\n\r\ninterface Props {}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  list: {\r\n    width: '100%',\r\n  },\r\n  listItem: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    width: '100%',\r\n    borderBottom: '1px solid rgba(50, 50, 50, 0.2)',\r\n  },\r\n}));\r\n\r\nconst data = [\r\n  {\r\n    from: '09.00',\r\n    to: '12.00',\r\n  },\r\n  {\r\n    from: '09.00',\r\n    to: '12.00',\r\n  },\r\n];\r\n\r\nexport default function SetWorkingHourPage({}: Props): ReactElement {\r\n  const classes = useStyles();\r\n\r\n  const [isOpenModal, setIsOpenModal] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <CustomModal\r\n        handleClose={() => setIsOpenModal(false)}\r\n        open={isOpenModal}\r\n        width={600}>\r\n        <Box width=\"100%\">\r\n          <Typography variant=\"h6\">Add Working Hour</Typography>\r\n          <Box py={2} display=\"flex\" alignItems=\"center\">\r\n            <Typography>From :</Typography>\r\n            <TextField type=\"time\" />\r\n          </Box>\r\n          <Box py={2} display=\"flex\" alignItems=\"center\">\r\n            <Typography>To :</Typography>\r\n            <TextField type=\"time\" />\r\n          </Box>\r\n          <Box width=\"100%\" display=\"flex\" justifyContent=\"flex-end\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => setIsOpenModal(false)}>\r\n              Add\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </CustomModal>\r\n      <Box width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n        <Box width=\"80%\" p={2}>\r\n          <Box display=\"flex\" justifyContent=\"flex-start\" my={2}>\r\n            <Typography variant=\"h4\">Working Hour</Typography>\r\n          </Box>\r\n          <Box width=\"100%\" display=\"flex\" justifyContent=\"flex-end\" my={2}>\r\n            <Button\r\n              onClick={() => setIsOpenModal(true)}\r\n              variant=\"contained\"\r\n              color=\"primary\">\r\n              + Add Working Hour\r\n            </Button>\r\n          </Box>\r\n          <Card>\r\n            <CardContent>\r\n              <List>\r\n                {data.map((el, index) => (\r\n                  <ListItem key={index} className={classes.listItem}>\r\n                    <Box>\r\n                      <Typography>From : {el.from}</Typography>\r\n                      <Typography>To : {el.to}</Typography>\r\n                    </Box>\r\n                    <IconButton size=\"small\" onClick={() => {}}>\r\n                      <DeleteIcon fontSize=\"small\" color=\"error\" />\r\n                    </IconButton>\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            </CardContent>\r\n          </Card>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n","D:\\ASLAB\\RIG2\\ReCourSy\\recoursy-frontend\\src\\components\\CustomModal\\CustomModal.tsx",[],"D:\\ASLAB\\RIG2\\ReCourSy\\recoursy-frontend\\src\\pages\\ViewWorkingHourPage\\ViewWorkingHourPage.tsx",["106","107"],"import {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  makeStyles,\r\n  Theme,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport React, { ReactElement } from 'react';\r\n\r\ninterface Props {}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  list: {\r\n    width: '100%',\r\n  },\r\n  listItem: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start',\r\n    width: '100%',\r\n    borderBottom: '1px solid rgba(50, 50, 50, 0.2)',\r\n  },\r\n  card: {\r\n    marginBottom: '24px',\r\n  },\r\n}));\r\n\r\nconst data = [\r\n  {\r\n    from: '09.00',\r\n    to: '12.00',\r\n  },\r\n  {\r\n    from: '09.00',\r\n    to: '12.00',\r\n  },\r\n];\r\n\r\nexport default function ViewWorkingHourPage({}: Props): ReactElement {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n      <Box width=\"80%\" p={2}>\r\n        <Box display=\"flex\" justifyContent=\"flex-start\" my={2}>\r\n          <Typography variant=\"h4\">Working Hour</Typography>\r\n        </Box>\r\n        <Card>\r\n          <CardContent>\r\n            <List>\r\n              {data.map((el, index) => (\r\n                <ListItem key={index} className={classes.listItem}>\r\n                  <Box>\r\n                    <Typography>From : {el.from}</Typography>\r\n                    <Typography>To : {el.to}</Typography>\r\n                  </Box>\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","D:\\ASLAB\\RIG2\\ReCourSy\\recoursy-frontend\\src\\pages\\ViewRequestPage\\ViewRequestPage.tsx",["108","109","110"],"import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  List,\r\n  ListItem,\r\n  makeStyles,\r\n  TextField,\r\n  Theme,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport React, { ReactElement } from 'react';\r\n\r\ninterface Props {}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  list: {\r\n    width: '100%',\r\n  },\r\n  listItem: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start',\r\n    width: '100%',\r\n    borderBottom: '1px solid rgba(50, 50, 50, 0.2)',\r\n  },\r\n  card: {\r\n    marginBottom: '24px',\r\n  },\r\n}));\r\n\r\nconst data = [\r\n  {\r\n    delivery_id: '12345',\r\n    date: 'Jan 16 2020',\r\n    from: '1305',\r\n    item_name: 'Surat Peringatan',\r\n    to: '1405',\r\n    receiver: 'asd@gmail.com',\r\n    status: 'Pending',\r\n    note: 'Berkas warna coklat, tali merah',\r\n  },\r\n  {\r\n    delivery_id: '12345',\r\n    date: 'Jan 16 2020',\r\n    from: '1305',\r\n    item_name: 'Surat Peringatan',\r\n    to: '1405',\r\n    receiver: 'asd@gmail.com',\r\n    status: 'Pending',\r\n    note: 'Berkas warna coklat, tali merah',\r\n  },\r\n  {\r\n    delivery_id: '12345',\r\n    date: 'Jan 16 2020',\r\n    from: '1305',\r\n    item_name: 'Surat Peringatan',\r\n    to: '1405',\r\n    receiver: 'asd@gmail.com',\r\n    status: 'Pending',\r\n    note: 'Berkas warna coklat, tali merah',\r\n  },\r\n];\r\n\r\nexport default function ViewRequestPage({}: Props): ReactElement {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n      <Box width=\"80%\" p={2}>\r\n        <Box display=\"flex\" justifyContent=\"flex-start\" my={2}>\r\n          <Typography variant=\"h4\">View Request</Typography>\r\n        </Box>\r\n        {data.map((el, index) => (\r\n          <Card className={classes.card} key={index}>\r\n            <CardContent>\r\n              <Box display=\"flex\" justifyContent=\"space-between\">\r\n                <Typography>Delivery Id : {el.delivery_id}</Typography>\r\n                <Typography>Date : {el.date}</Typography>\r\n              </Box>\r\n              <Box\r\n                py={2}\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                justifyContent=\"space-between\">\r\n                <Typography>From : {el.from}</Typography>\r\n                <Typography>To : {el.to}</Typography>\r\n              </Box>\r\n              <Box\r\n                py={2}\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                justifyContent=\"space-between\">\r\n                <Typography>Receiver : {el.receiver}</Typography>\r\n                <Typography>Status : {el.status}</Typography>\r\n              </Box>\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"column\"\r\n                alignItems=\"flex-start\">\r\n                <Typography>Item Name : {el.item_name}</Typography>\r\n                <Box width=\"100%\" py={1}>\r\n                  <TextField\r\n                    label=\"Note\"\r\n                    fullWidth\r\n                    multiline\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    value={el.note}\r\n                    disabled\r\n                    InputProps={{\r\n                      rows: 2,\r\n                    }}\r\n                  />\r\n                </Box>\r\n              </Box>\r\n              <Box width=\"100%\" display=\"flex\" justifyContent=\"flex-end\">\r\n                <Button variant=\"contained\" color=\"secondary\">\r\n                  Cancel\r\n                </Button>\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        ))}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","D:\\ASLAB\\RIG2\\ReCourSy\\recoursy-frontend\\src\\pages\\ViewDeliveryHistoryPage\\ViewDeliveryHistoryPage.tsx",["111"],"import {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  List,\r\n  ListItem,\r\n  makeStyles,\r\n  TextField,\r\n  Theme,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport React, { ReactElement } from 'react';\r\n\r\ninterface Props {}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  list: {\r\n    width: '100%',\r\n  },\r\n  listItem: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start',\r\n    width: '100%',\r\n    borderBottom: '1px solid rgba(50, 50, 50, 0.2)',\r\n  },\r\n  card: {\r\n    marginBottom: '24px',\r\n  },\r\n}));\r\n\r\nconst data = [\r\n  {\r\n    delivery_id: '12345',\r\n    date: 'Jan 16 2020',\r\n    from: '1305',\r\n    detail: [\r\n      {\r\n        item_name: 'Surat Peringatan',\r\n        to: '1405',\r\n        receiver: 'asd@gmail.com',\r\n        status: 'Pending',\r\n        note: 'Berkas warna coklat, tali merah',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    delivery_id: '12345',\r\n    date: 'Jan 16 2020',\r\n    from: '1305',\r\n    detail: [\r\n      {\r\n        item_name: 'Surat Peringatan',\r\n        to: '1405',\r\n        receiver: 'asd@gmail.com',\r\n        status: 'Pending',\r\n        note: 'Berkas warna coklat, tali merah',\r\n      },\r\n      {\r\n        item_name: 'Surat Peringatan',\r\n        to: '1405',\r\n        receiver: 'asd@gmail.com',\r\n        status: 'Pending',\r\n        note: 'Berkas warna coklat, tali merah',\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default function ViewDeliveryHistoryPage({}: Props): ReactElement {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n      <Box width=\"80%\" p={2}>\r\n        <Box display=\"flex\" justifyContent=\"flex-start\" my={2}>\r\n          <Typography variant=\"h4\">View Delivery History</Typography>\r\n        </Box>\r\n        {data.map((el, index) => (\r\n          <Card className={classes.card} key={index}>\r\n            <CardContent>\r\n              <Box display=\"flex\" justifyContent=\"space-between\">\r\n                <Typography>Delivery Id : {el.delivery_id}</Typography>\r\n                <Typography>Date : {el.date}</Typography>\r\n              </Box>\r\n              <Box\r\n                py={2}\r\n                display=\"flex\"\r\n                flexDirection=\"column\"\r\n                alignItems=\"flex-start\">\r\n                <Typography>From : {el.from}</Typography>\r\n              </Box>\r\n              <Box borderBottom=\"1px solid\" />\r\n              <List className={classes.list}>\r\n                {el.detail.map((el1, index) => (\r\n                  <ListItem className={classes.listItem} key={index}>\r\n                    <Box display=\"flex\" width=\"100%\">\r\n                      <Typography>Item Name : {el1.item_name}</Typography>\r\n                    </Box>\r\n                    <Box\r\n                      width=\"100%\"\r\n                      py={2}\r\n                      display=\"flex\"\r\n                      justifyContent=\"space-between\">\r\n                      <Box\r\n                        display=\"flex\"\r\n                        flexDirection=\"column\"\r\n                        alignItems=\"flex-start\">\r\n                        <Typography>To : {el1.to}</Typography>\r\n                        <Typography>Receiver : {el1.receiver}</Typography>\r\n                      </Box>\r\n                    </Box>\r\n                    <Box py={2} width=\"100%\">\r\n                      <TextField\r\n                        label=\"Note\"\r\n                        fullWidth\r\n                        multiline\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        value={el1.note}\r\n                        disabled\r\n                        InputProps={{\r\n                          rows: 2,\r\n                        }}\r\n                      />\r\n                    </Box>\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            </CardContent>\r\n          </Card>\r\n        ))}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","D:\\ASLAB\\RIG2\\ReCourSy\\recoursy-frontend\\src\\pages\\RequestDeliveryPage\\RequestDeliveryPage.tsx",["112"],"import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  IconButton,\r\n  makeStyles,\r\n  TextField,\r\n  Theme,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport React, { ReactElement, useState } from 'react';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  addBtn: {\r\n    borderRadius: '20px',\r\n  },\r\n}));\r\n\r\ninterface Props {}\r\n\r\nexport default function RequestDeliveryPage({}: Props): ReactElement {\r\n  const classes = useStyles();\r\n\r\n  const [detailRequest, setDetailRequest] = useState<\r\n    { to: string; receiver: string; item: string; note: string }[]\r\n  >([]);\r\n\r\n  console.log(detailRequest);\r\n\r\n  return (\r\n    <Box width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n      <Box width=\"80%\" p={2}>\r\n        <Box display=\"flex\" justifyContent=\"flex-start\" my={2}>\r\n          <Typography variant=\"h4\">Request Delivery</Typography>\r\n        </Box>\r\n        <Card>\r\n          <CardContent>\r\n            <Box display=\"flex\" flexDirection=\"column\" alignItems=\"flex-start\">\r\n              <TextField type=\"text\" label=\"From\" />\r\n              <Box py={2} width=\"100%\" display=\"flex\" justifyContent=\"flex-end\">\r\n                <Button\r\n                  className={classes.addBtn}\r\n                  variant=\"outlined\"\r\n                  onClick={() => {\r\n                    const newArr = {\r\n                      to: '',\r\n                      receiver: '',\r\n                      item: '',\r\n                      note: '',\r\n                    };\r\n                    setDetailRequest((oldArray) => [...oldArray, newArr]);\r\n                  }}>\r\n                  Add Item\r\n                </Button>\r\n              </Box>\r\n              {detailRequest.map((el, index) => (\r\n                <Box key={index} width=\"100%\" borderBottom=\"1px solid\" py={2}>\r\n                  <Box width=\"100%\" display=\"flex\" justifyContent=\"flex-end\">\r\n                    <IconButton\r\n                      size=\"small\"\r\n                      onClick={() => {\r\n                        const newArr = detailRequest.filter(\r\n                          (el, idx) => idx !== index\r\n                        );\r\n                        setDetailRequest(newArr);\r\n                      }}>\r\n                      <DeleteIcon fontSize=\"small\" color=\"error\" />\r\n                    </IconButton>\r\n                  </Box>\r\n                  <Box\r\n                    py={2}\r\n                    width=\"100%\"\r\n                    display=\"flex\"\r\n                    justifyContent=\"space-between\">\r\n                    <TextField\r\n                      onChange={(e) => {\r\n                        const value = e.target.value;\r\n                        let newArr = [...detailRequest];\r\n                        newArr[index].to = value;\r\n                        setDetailRequest(newArr);\r\n                      }}\r\n                      value={el.to}\r\n                      variant=\"outlined\"\r\n                      type=\"text\"\r\n                      label=\"To\"\r\n                    />\r\n                    <TextField\r\n                      onChange={(e) => {\r\n                        const value = e.target.value;\r\n                        let newArr = [...detailRequest];\r\n                        newArr[index].receiver = value;\r\n                        setDetailRequest(newArr);\r\n                      }}\r\n                      value={el.receiver}\r\n                      type=\"text\"\r\n                      variant=\"outlined\"\r\n                      label=\"Receiver\"\r\n                    />\r\n                  </Box>\r\n                  <Box\r\n                    width=\"100%\"\r\n                    display=\"flex\"\r\n                    flexDirection=\"column\"\r\n                    alignItems=\"flex-start\">\r\n                    <Box py={2}>\r\n                      <TextField\r\n                        onChange={(e) => {\r\n                          const value = e.target.value;\r\n                          let newArr = [...detailRequest];\r\n                          newArr[index].item = value;\r\n                          setDetailRequest(newArr);\r\n                        }}\r\n                        value={el.item}\r\n                        type=\"text\"\r\n                        variant=\"outlined\"\r\n                        label=\"Item\"\r\n                      />\r\n                    </Box>\r\n                    <TextField\r\n                      fullWidth\r\n                      onChange={(e) => {\r\n                        const value = e.target.value;\r\n                        let newArr = [...detailRequest];\r\n                        newArr[index].note = value;\r\n                        setDetailRequest(newArr);\r\n                      }}\r\n                      multiline\r\n                      variant=\"outlined\"\r\n                      value={el.note}\r\n                      type=\"text\"\r\n                      label=\"Note\"\r\n                      InputProps={{\r\n                        rows: 3,\r\n                      }}\r\n                    />\r\n                  </Box>\r\n                </Box>\r\n              ))}\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","D:\\ASLAB\\RIG2\\ReCourSy\\recoursy-frontend\\src\\pages\\HomePage\\HomePage.tsx",["113"],"import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  makeStyles,\r\n  Theme,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport React, { ReactElement } from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\ninterface Props {}\r\n\r\nconst dataRequest = [\r\n  {\r\n    delivery_id: '12345',\r\n    date: 'Jan 16 2020',\r\n    from: '1305',\r\n    to: '1402',\r\n    receiver: 'asd@gmail.com',\r\n    status: 'Pending',\r\n  },\r\n  {\r\n    delivery_id: '12345',\r\n    date: 'Jan 16 2020',\r\n    from: '1305',\r\n    to: '1402',\r\n    receiver: 'asd@gmail.com',\r\n    status: 'Pending',\r\n  },\r\n  {\r\n    delivery_id: '12345',\r\n    date: 'Jan 16 2020',\r\n    from: '1305',\r\n    to: '1402',\r\n    receiver: 'asd@gmail.com',\r\n    status: 'Pending',\r\n  },\r\n];\r\n\r\nconst dataHistory = [\r\n  {\r\n    delivery_id: '12345',\r\n    date: 'Jan 16 2020',\r\n    from: '1305',\r\n    totalItems: '3',\r\n  },\r\n  {\r\n    delivery_id: '12345',\r\n    date: 'Jan 16 2020',\r\n    from: '1305',\r\n    totalItems: '3',\r\n  },\r\n  {\r\n    delivery_id: '12345',\r\n    date: 'Jan 16 2020',\r\n    from: '1305',\r\n    totalItems: '3',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  card: {\r\n    width: '33%',\r\n    marginRight: '8px',\r\n  },\r\n}));\r\n\r\nexport default function HomePage({}: Props): ReactElement {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n      <Box\r\n        p={2}\r\n        py={4}\r\n        width=\"80%\"\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        alignItems=\"center\">\r\n        <Box py={2} display=\"flex\" justifyContent=\"space-between\" width=\"100%\">\r\n          <Typography variant=\"h5\">Recent Request</Typography>\r\n          <Button onClick={() => history.push('/view-request')} color=\"primary\">\r\n            View More\r\n          </Button>\r\n        </Box>\r\n        <Box width=\"100%\" display=\"flex\">\r\n          {dataRequest.map((el, index) => (\r\n            <Card key={index} className={classes.card}>\r\n              <CardContent>\r\n                <Box width=\"100%\" display=\"flex\" justifyContent=\"space-between\">\r\n                  <Typography>Delivery ID : {el.delivery_id}</Typography>\r\n                  <Typography>Date : {el.date}</Typography>\r\n                </Box>\r\n                <Box\r\n                  width=\"100%\"\r\n                  display=\"flex\"\r\n                  justifyContent=\"space-between\"\r\n                  alignItems=\"center\">\r\n                  <Box\r\n                    py={2}\r\n                    display=\"flex\"\r\n                    flexDirection=\"column\"\r\n                    alignItems=\"flex-start\">\r\n                    <Typography>From : {el.from}</Typography>\r\n                    <Typography>To : {el.to}</Typography>\r\n                    <Typography>Receiver : {el.receiver}</Typography>\r\n                  </Box>\r\n                  <Typography>Status : {el.status}</Typography>\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          ))}\r\n        </Box>\r\n      </Box>\r\n      <Box\r\n        py={4}\r\n        p={2}\r\n        width=\"80%\"\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        alignItems=\"center\">\r\n        <Box py={2} display=\"flex\" justifyContent=\"space-between\" width=\"100%\">\r\n          <Typography variant=\"h5\">Recent History</Typography>\r\n          <Button\r\n            onClick={() => history.push('/view-delivery-history')}\r\n            color=\"primary\">\r\n            View More\r\n          </Button>\r\n        </Box>\r\n        <Box width=\"100%\" display=\"flex\">\r\n          {dataHistory.map((el, index) => (\r\n            <Card key={index} className={classes.card}>\r\n              <CardContent>\r\n                <Box width=\"100%\" display=\"flex\" justifyContent=\"space-between\">\r\n                  <Typography>Delivery ID : {el.delivery_id}</Typography>\r\n                  <Typography>Date : {el.date}</Typography>\r\n                </Box>\r\n                <Box width=\"100%\" display=\"flex\" justifyContent=\"space-between\">\r\n                  <Typography>From : {el.from}</Typography>\r\n                  <Typography>Total Items : {el.totalItems}</Typography>\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          ))}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","D:\\ASLAB\\RIG2\\ReCourSy\\recoursy-frontend\\src\\pages\\LoginPage\\LoginPage.tsx",["114"],"import {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  makeStyles,\r\n  TextField,\r\n  Theme,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport React, { ReactElement } from 'react';\r\n\r\ninterface Props {}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  card: {\r\n    width: '500px',\r\n    height: '500px',\r\n  },\r\n  cardContent: {\r\n    height: '100%',\r\n  },\r\n}));\r\n\r\nexport default function LoginPage({}: Props): ReactElement {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box\r\n      width=\"100vw\"\r\n      height=\"100vh\"\r\n      top={0}\r\n      position=\"fixed\"\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\">\r\n      <Card className={classes.card}>\r\n        <CardContent className={classes.cardContent}>\r\n          <Box\r\n            height=\"30%\"\r\n            color=\"#3f51b5\"\r\n            display=\"flex\"\r\n            flexDirection=\"column\"\r\n            justifyContent=\"center\">\r\n            <Typography variant=\"h3\" color=\"inherit\">\r\n              Login\r\n            </Typography>\r\n          </Box>\r\n          <Box\r\n            height=\"70%\"\r\n            display=\"flex\"\r\n            flexDirection=\"column\"\r\n            justifyContent=\"flex-start\">\r\n            <Box py={2} display=\"flex\" flexDirection=\"column\">\r\n              <TextField variant=\"outlined\" type=\"text\" label=\"Email\" />\r\n            </Box>\r\n            <Box py={2} display=\"flex\" flexDirection=\"column\">\r\n              <TextField variant=\"outlined\" type=\"password\" label=\"Password\" />\r\n            </Box>\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  );\r\n}\r\n","D:\\ASLAB\\RIG2\\ReCourSy\\recoursy-frontend\\src\\routes\\MainRoute.tsx",["115"],"import { Box } from '@material-ui/core';\r\nimport React, { ReactElement } from 'react';\r\nimport { Route, Switch } from 'react-router';\r\nimport Navbar from '../components/Navbar/Navbar';\r\nimport HomePage from '../pages/HomePage/HomePage';\r\nimport LoginPage from '../pages/LoginPage/LoginPage';\r\nimport PageNotFound from '../pages/PageNotFound/PageNotFound';\r\nimport RequestDeliveryPage from '../pages/RequestDeliveryPage/RequestDeliveryPage';\r\nimport SetWorkingHourPage from '../pages/SetWorkingHourPage/SetWorkingHourPage';\r\nimport ViewDeliveryHistoryPage from '../pages/ViewDeliveryHistoryPage/ViewDeliveryHistoryPage';\r\nimport ViewDeliveryStatusPage from '../pages/ViewDeliveryStatusPage/ViewDeliveryStatusPage';\r\nimport ViewRequestPage from '../pages/ViewRequestPage/ViewRequestPage';\r\nimport ViewWorkingHourPage from '../pages/ViewWorkingHourPage/ViewWorkingHourPage';\r\n\r\ninterface Props {}\r\n\r\nexport default function MainRoute({}: Props): ReactElement {\r\n  return (\r\n    <Box>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={HomePage} />\r\n        <Route exact path=\"/home\" component={HomePage} />\r\n        <Route exact path=\"/login\" component={LoginPage} />\r\n        <Route exact path=\"/request-delivery\" component={RequestDeliveryPage} />\r\n        <Route\r\n          exact\r\n          path=\"/view-delivery-history\"\r\n          component={ViewDeliveryHistoryPage}\r\n        />\r\n        <Route exact path=\"/view-request\" component={ViewRequestPage} />\r\n        <Route exact path=\"/set-working-hour\" component={SetWorkingHourPage} />\r\n        <Route\r\n          exact\r\n          path=\"/view-working-hour\"\r\n          component={ViewWorkingHourPage}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/view-delivery-status\"\r\n          component={ViewDeliveryStatusPage}\r\n        />\r\n        <Route path=\"*\" component={PageNotFound} />\r\n      </Switch>\r\n    </Box>\r\n  );\r\n}\r\n","D:\\ASLAB\\RIG2\\ReCourSy\\recoursy-frontend\\src\\utlis\\cookies.ts",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":12},{"ruleId":"120","severity":1,"message":"124","line":10,"column":9,"nodeType":"122","messageId":"123","endLine":10,"endColumn":14},{"ruleId":"120","severity":1,"message":"125","line":9,"column":3,"nodeType":"122","messageId":"123","endLine":9,"endColumn":7},{"ruleId":"120","severity":1,"message":"126","line":15,"column":8,"nodeType":"122","messageId":"123","endLine":15,"endColumn":31},{"ruleId":"127","severity":1,"message":"128","line":85,"column":32,"nodeType":"129","messageId":"130","endLine":85,"endColumn":41},{"ruleId":"127","severity":1,"message":"128","line":5,"column":30,"nodeType":"129","messageId":"130","endLine":5,"endColumn":39},{"ruleId":"127","severity":1,"message":"128","line":6,"column":38,"nodeType":"129","messageId":"130","endLine":6,"endColumn":47},{"ruleId":"116","replacedBy":"131"},{"ruleId":"118","replacedBy":"132"},{"ruleId":"120","severity":1,"message":"133","line":13,"column":31,"nodeType":"122","messageId":"123","endLine":13,"endColumn":40},{"ruleId":"120","severity":1,"message":"134","line":14,"column":8,"nodeType":"122","messageId":"123","endLine":14,"endColumn":29},{"ruleId":"127","severity":1,"message":"128","line":73,"column":48,"nodeType":"129","messageId":"130","endLine":73,"endColumn":57},{"ruleId":"120","severity":1,"message":"135","line":76,"column":10,"nodeType":"122","messageId":"123","endLine":76,"endColumn":20},{"ruleId":"120","severity":1,"message":"136","line":76,"column":22,"nodeType":"122","messageId":"123","endLine":76,"endColumn":35},{"ruleId":"127","severity":1,"message":"128","line":45,"column":44,"nodeType":"129","messageId":"130","endLine":45,"endColumn":53},{"ruleId":"120","severity":1,"message":"137","line":5,"column":3,"nodeType":"122","messageId":"123","endLine":5,"endColumn":13},{"ruleId":"127","severity":1,"message":"128","line":43,"column":45,"nodeType":"129","messageId":"130","endLine":43,"endColumn":54},{"ruleId":"120","severity":1,"message":"138","line":6,"column":3,"nodeType":"122","messageId":"123","endLine":6,"endColumn":7},{"ruleId":"120","severity":1,"message":"139","line":7,"column":3,"nodeType":"122","messageId":"123","endLine":7,"endColumn":11},{"ruleId":"127","severity":1,"message":"128","line":66,"column":41,"nodeType":"129","messageId":"130","endLine":66,"endColumn":50},{"ruleId":"127","severity":1,"message":"128","line":70,"column":49,"nodeType":"129","messageId":"130","endLine":70,"endColumn":58},{"ruleId":"127","severity":1,"message":"128","line":23,"column":45,"nodeType":"129","messageId":"130","endLine":23,"endColumn":54},{"ruleId":"127","severity":1,"message":"128","line":70,"column":34,"nodeType":"129","messageId":"130","endLine":70,"endColumn":43},{"ruleId":"127","severity":1,"message":"128","line":24,"column":35,"nodeType":"129","messageId":"130","endLine":24,"endColumn":44},{"ruleId":"127","severity":1,"message":"128","line":17,"column":35,"nodeType":"129","messageId":"130","endLine":17,"endColumn":44},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","'Menu' is defined but never used.","'NotificationsActiveIcon' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected",["140"],["141"],"'useEffect' is defined but never used.","'FiberManualRecordIcon' is defined but never used.","'listStatus' is assigned a value but never used.","'setListStatus' is assigned a value but never used.","'IconButton' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","no-global-assign","no-unsafe-negation"]